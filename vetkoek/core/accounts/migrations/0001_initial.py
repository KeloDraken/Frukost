# Generated by Django 3.2.4 on 2021-12-04 13:22

import core.accounts.models
import django.contrib.auth.models
from django.db import migrations, models
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('object_id', models.CharField(blank=True, max_length=20, null=True)),
                ('is_fake_profile', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('gelt', models.IntegerField(default=500)),
                ('num_posts', models.PositiveIntegerField(default=0)),
                ('username', core.accounts.models.LowercaseCharField(error_messages={'unique': 'This username is not available, please try another one.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=300, unique=True, verbose_name='username')),
                ('display_name', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_pic', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='accounts/profile_pics/')),
                ('bio', models.TextField(blank=True, max_length=300, null=True)),
                ('subscribers', models.PositiveBigIntegerField(default=1)),
                ('upvotes', models.PositiveBigIntegerField(default=0)),
                ('instagram', models.CharField(blank=True, max_length=60, null=True)),
                ('vsco', models.CharField(blank=True, max_length=60, null=True)),
                ('twitter', models.CharField(blank=True, max_length=60, null=True)),
                ('website', models.URLField(blank=True, max_length=300, null=True)),
                ('default_html', models.TextField(default='\n<style>\n    /*\n        Main Msukwini user profile Stylesheet\n        (c) 2020-2021 Samkelo Rocks (Pty) Ltd\n    */\n\n    :root {\n        font-size: .8em;\n    }\n\n    *,\n    *::before,\n    *::after {\n        box-sizing: border-box;\n    }\n\n    body {\n        font-family: "Open Sans", Arial, sans-serif;\n        min-height: 100vh;\n        background-color: #fafafa;\n        color: #000;\n        padding-bottom: 3rem;\n    }\n\n    img {\n        display: block;\n    }\n\n    .container {\n        max-width: 93.5rem;\n        margin: 0 auto;\n        padding: 0 2rem;\n    }\n\n    .btn {\n        display: inline-block;\n        font: inherit;\n        background: none;\n        border: none;\n        color: inherit;\n        padding: 0;\n        cursor: pointer;\n    }\n\n    /* Profile Section */\n    .profile {\n        padding: 5rem 0;\n    }\n\n    .profile::after {\n        content: "";\n        display: block;\n        clear: both;\n    }\n\n    .profile-image {\n        float: left;\n        width: calc(33.333% - 1rem);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin-right: 3rem;\n    }\n\n    .profile-image img {\n        border-radius: 50%;\n        height: 200px;\n        width: 200px;\n    }\n\n    .profile-user-settings {\n        margin-top: 1.1rem;\n    }\n\n    .profile-user-name {\n        display: inline-block;\n        font-size: 2rem;\n        font-weight: 300;\n    }\n\n    .profile-btn {\n        text-decoration: none;\n        font-size: 1.4rem;\n        line-height: 1.8;\n        border: 0.1rem solid #dbdbdb;\n        border-radius: 0.3rem;\n        padding: 0 2.4rem;\n        margin-left: 2rem;\n    }\n\n    .profile-settings-btn {\n        font-size: 2rem;\n        margin-left: 1rem;\n    }\n\n    .profile-stats {\n        margin-top: 2.3rem;\n    }\n\n    .profile-stats li {\n        display: inline-block;\n        font-size: 1.6rem;\n        line-height: 1.5;\n        margin-right: 4rem;\n        cursor: pointer;\n    }\n\n    .profile-stats li:last-of-type {\n        margin-right: 0;\n    }\n\n    .profile-bio {\n        font-size: 1.6rem;\n        font-weight: 400;\n        line-height: 1.5;\n        margin-top: 2.3rem;\n    }\n\n    .profile-real-name,\n    .profile-stat-count,\n    .profile-btn {\n        font-weight: 600;\n    }\n\n    /* Gallery Section */\n\n    .gallery {\n        display: flex;\n        flex-wrap: wrap;\n        margin: -1rem -1rem;\n        padding-bottom: 3rem;\n    }\n\n    .gallery-item {\n        position: relative;\n        flex: 1 0 22rem;\n        margin: 1rem;\n        color: #fff;\n        cursor: pointer;\n    }\n    .gallery-item-link {\n        color: #fff;\n        text-decoration: none;\n    }\n\n    .gallery-item:hover .gallery-item-info,\n    .gallery-item:focus .gallery-item-info {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(0, 0, 0, 0.7);\n    }\n\n    .gallery-item-info {\n        display: none;\n    }\n\n    .gallery-item-info li {\n        display: inline-block;\n        font-size: 1.7rem;\n        font-weight: 600;\n    }\n\n    .gallery-item-type {\n        position: absolute;\n        top: 1rem;\n        right: 1rem;\n        font-size: 2.5rem;\n        text-shadow: 0.2rem 0.2rem 0.2rem rgba(0, 0, 0, 0.1);\n    }\n    \n    .gallery-image {\n        width: 100%;\n        height: 30rem;\n        object-fit: cover;\n    }\n\n    @supports (display: grid) {\n        .profile {\n            display: grid;\n            grid-template-columns: 1fr 2fr;\n            grid-template-rows: repeat(3, auto);\n            grid-column-gap: 3rem;\n            align-items: center;\n        }\n\n        .profile-image {\n            grid-row: 1 / -1;\n        }\n\n        .gallery {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(22rem, 1fr));\n            grid-gap: 2rem;\n        }\n\n        .profile-image,\n        .profile-user-settings,\n        .profile-stats,\n        .profile-bio,\n        .gallery-item,\n        .gallery {\n            width: auto;\n            margin: 0;\n        }\n    }\n</style>\n    ')),
                ('custom_html', models.TextField(blank=True, null=True)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('datetime_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
